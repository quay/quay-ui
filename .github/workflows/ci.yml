name: Quay UI Integration Tests

on:
  pull_request:
    branches:
    - "*"

jobs:
  cypress-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Clone Quay Repository
        uses: actions/checkout@v3
        with:
          repository: quay/quay
          path: './quay'

      - name: install yq
        env:
          VERSION: v4.14.2
          BINARY: yq_linux_amd64
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
      - name: Update images
        run: |
          yq e -i '
            .services.quay.image = "quay.io/projectquay/quay" ' ./quay/docker-compose.yaml && \
          yq e -i 'del(.services.quay.build)' ./quay/docker-compose.yaml
   
      - name: Start Quay
        run: |
          # This rebuilds Quay from scratch, should look to use images built off of Quay master
          cd quay
          docker-compose up -d redis quay-db
          docker exec -t quay-db bash -c 'while ! pg_isready; do echo "waiting for postgres"; sleep 2; done'
          DOCKER_USER="1001:0" docker-compose up -d quay
      - name: Cypress run
        uses: cypress-io/github-action@v4.2.0
        with:
          browser: chrome
          build: npm run build
          start: npm run start:integration
          wait-on: 'http://localhost:9000'
          wait-on-timeout: 120
        env:
          REACT_QUAY_APP_API_URL: http://localhost:8080
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
